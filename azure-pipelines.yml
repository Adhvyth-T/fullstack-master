trigger:
- main

pool:
  name: 'Default'  # Your self-hosted agent pool
  demands:
  - agent.name -equals agent2

stages:
# ------------------
# Stage 1: Trigger Jenkins
# ------------------
- stage: CI
  displayName: "Run Jenkins CI"
  jobs:
  - job: TriggerJenkins
    displayName: "Trigger Jenkins Pipeline"
    steps:
    - bash: |
        echo "Triggering Jenkins job..."
        curl -X POST "http://<JENKINS_URL>/job/<JOB_NAME>/build" \
          --user "$(JENKINS_USER):$(JENKINS_API_TOKEN)"
      displayName: "Trigger Jenkins Build"

# ------------------
# Stage 2: Terraform Deploy
# ------------------
- stage: CD
  displayName: "Deploy App to AKS"
  dependsOn: CI
  jobs:
  - job: Terraform
    displayName: "Terraform Deploy"
    steps:
    - checkout: self

    # Install Terraform
    - bash: |
        sudo apt-get update
        sudo apt-get install -y unzip curl
        curl -sLo terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: "Install Terraform"

    # Run Terraform
    - task: AzureCLI@2
      displayName: "Terraform Init & Apply"
      inputs:
        azureSubscription: 'myAzureRMServiceConnection'   # <-- reuse your working service connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Working directory: $(Build.SourcesDirectory)"
          ls -R $(Build.SourcesDirectory)

          cd $(Build.SourcesDirectory)/terraform   # <-- point to new Terraform directory
          terraform init -input=false
          terraform validate
          terraform plan -out=tfplan -input=false
          terraform apply -input=false tfplan
